files:
  /etc/nginx/conf.d/https.conf:
    content: |
      # HTTPS server

      server {
          listen       443;
          server_name  SERVICENAME;

          ssl                  on;
          ssl_certificate      /etc/pki/tls/certs/server.crt;
          ssl_certificate_key  /etc/pki/tls/private/server.key;

          ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DHE+AES128:!ADH:!AECDH:!MD5;
          ssl_prefer_server_ciphers   on;

          ssl_session_cache shared:SSL:20m;
          ssl_session_timeout 120m;

          add_header Strict-Transport-Security "max-age=31536000" always;

          location / {
              proxy_pass  http://my_app;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          location /assets {
            alias /var/app/current/public/assets;
            gzip_static on;
            gzip on;
            expires max;
            add_header Cache-Control public;
          }

          location /public {
            alias /var/app/current/public;
            gzip_static on;
            gzip on;
            expires max;
            add_header Cache-Control public;
          }

          #FastCGI authorizer for Auth Request module
          location = /shibauthorizer {
              internal;
              include fastcgi_params;
              fastcgi_pass unix:/opt/shibboleth/shibauthorizer.sock;
          }

          #FastCGI responder
          location /Shibboleth.sso {
              include fastcgi_params;
              fastcgi_pass unix:/opt/shibboleth/shibresponder.sock;
          }

          #Resources for the Shibboleth error pages. This can be customised.
          location /shibboleth-sp {
              alias /usr/share/shibboleth/;
          }

          #A secured location.  Here all incoming requests query the
          #FastCGI authorizer.  Watch out for performance issues and spoofing.
          location /secure {
               include shib_clear_headers;
               #Add your attributes here. They get introduced as headers
               #by the FastCGI authorizer so we must prevent spoofing.
               more_clear_input_headers 'displayName' 'mail' 'persistent-id';
               shib_request /shibauthorizer;
               shib_request_use_headers on;
               proxy_pass http://my_app;
           }

      }

  /etc/nginx/shib_clear_headers:
      content: |
        # Ensure that you add directives to clear input headers for *all* attributes
        # that your backend application uses. This may also include variations on these
        # headers, such as differing capitalisations and replacing hyphens with
        # underscores etc -- it all depends on what your application is reading.
        #
        # Note that Nginx silently drops headers with underscores
        # unless the non-default `underscores_in_headers` is enabled.

        # Shib-* doesn't currently work because * isn't (yet) supported
        more_clear_input_headers
          Auth-Type
          Remote-User;

  /etc/nginx/shib_fastcgi_params:
    content: |
      # vim: set filetype=conf :

      # Replace `fastcgi_param` with `sgci_param`, `uwsgi_param` or similar
      # directive for use with different upstreams. Consult the relevant upstream
      # documentation for more information on environment parameters.
      #
      # Auth-Type is configured as authType in
      # https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPContentSettings.
      # Other default SP variables are as per
      # https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPAttributeAccess#NativeSPAttributeAccess-CustomSPVariables

      shib_request_set $shib_auth_type $upstream_http_variable_auth_type;
      fastcgi_param Auth-Type $shib_auth_type;

      shib_request_set $shib_remote_user $upstream_http_variable_remote_user;
      fastcgi_param Remote-User $shib_remote_user;


      # Uncomment any of the following core attributes. Consult your Shibboleth
      # Service Provider (SP) attribute-map.xml file for details about attribute
      # IDs.  Add additional directives for any Shibboleth attributes released to
      # your SP.

      # shib_request_set $shib_eppn $upstream_http_variable_eppn;
      # fastcgi_param EPPN $shib_eppn;
      #
      # shib_request_set $shib_affliation $upstream_http_variable_affiliation;
      # fastcgi_param Affiliation $shib_affiliation;
      #
      # shib_request_set $shib_unscoped_affliation $upstream_http_variable_unscoped_affiliation;
      # fastcgi_param Unscoped-Affiliation $shib_unscoped_affiliation;
      #
      # shib_request_set $shib_entitlement $upstream_http_variable_entitlement;
      # fastcgi_param Entitlement $shib_entitlement;


      # shib_request_set $shib_targeted_id $upstream_http_variable_targeted_id;
      # fastcgi_param Targeted-Id $shib_targeted_id;
      #
      # shib_request_set $shib_persistent_id $upstream_http_variable_persistent_id;
      # fastcgi_param Persistent-Id $shib_persistent_id;
      #
      # shib_request_set $shib_transient_name $upstream_http_variable_transient_name;
      # fastcgi_param Transient-Name $shib_transient_name;


      # shib_request_set $shib_commonname $upstream_http_variable_commonname;
      # fastcgi_param Commonname $shib_commonname;
      #
      # shib_request_set $shib_displayname $upstream_http_variable_displayname;
      # fastcgi_param DisplayName $shib_displayname;
      #
      # shib_request_set $shib_email $upstream_http_variable_email;
      # fastcgi_param Email $shib_email;
      #
      # shib_request_set $shib_organizationname $upstream_http_variable_organizationname;
      # fastcgi_param OrganizationName $shib_organizationname;

container_commands:
  01_restart_nginx:
    command: service nginx restart
